generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  firstName     String
  lastName      String
  sub           String        @unique
  profileImgUrl String
  bookshelves   Bookshelf[]
  forkedshelves Forkedshelf[]
}

model Book {
  id                  String          @id @default(uuid())
  isbn                String          @unique
  title               String
  author              String
  year_of_publication Int
  publisher           String
  image_url_s         String?
  image_url_m         String?
  image_url_l         String?
  description         String?
  genres              String[]
  Bookshelves         BookshelfBook[]
}

model Bookshelf {
  id          String          @id @default(uuid())
  name        String
  description String?
  visible     Visibility      @default(PRIVATE)
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
  userId      String
  owner       User            @relation(fields: [userId], references: [id])
  books       BookshelfBook[]
  userForks   Forkedshelf[]
}

enum Visibility {
  PUBLIC
  PRIVATE
}

model BookshelfBook {
  bookshelfId String
  bookId      String
  bookshelf   Bookshelf @relation(fields: [bookshelfId], references: [id], onDelete: Cascade)
  book        Book      @relation(fields: [bookId], references: [id])
  assignedAt  DateTime  @default(now())

  @@id([bookshelfId, bookId])
}

model Forkedshelf {
  id          String    @id @default(uuid())
  readerId    String
  bookshelfId String
  reader      User      @relation(fields: [readerId], references: [id], onDelete: Cascade)
  bookshelf   Bookshelf @relation(fields: [bookshelfId], references: [id], onDelete: Cascade)
}
